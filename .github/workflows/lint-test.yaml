name: Lint and Test Charts

on:
  pull_request:
    paths:
jobs:
  changes:
    runs-on: ubuntu-latest-low

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - 'charts/nextcloud/Chart.yaml'
              - 'charts/nextcloud/values.yaml'
              - 'charts/nextcloud/templates/**'

  lint:
    runs-on: ubuntu-latest-low
    needs: changes
    if: needs.changes.outputs.src != 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add collabora-online https://collaboraonline.github.io/online

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        id: lint
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

  test:
    runs-on: ubuntu-24.04
    needs: [changes, lint]
    # only run this job if there are helm chart file changes
    if: needs.changes.outputs.src != 'false'
    strategy:
      # continue with all the other jobs even if one fails
      fail-fast: false
      matrix:
        # each item in this list is a job with an isolated test VM
        test_cases:
          # test the plain helm chart with nothing changed
          - name: 'Default - no custom values'

          # test the helm chart with postgresql subchart enabled
          - name: PostgreSQL Enabled
            helm_args: '--helm-extra-set-args "--values charts/nextcloud/test-values/postgresql.yaml"'

          # test the helm chart with nginx container enabled
          - name: Nginx Enabled
            helm_args: '--helm-extra-set-args "--values charts/nextcloud/test-values/nginx.yaml"'

          # test the helm chart with horizontal pod autoscaling enabled
          - name: Horizontal Pod Autoscaling Enabled
            helm_args: '--helm-extra-set-args "--values charts/nextcloud/test-values/hpa.yaml"'

          # test the helm chart with s3 as the primary storage
          - name: S3 Enabled as Primary Storage
            # we need to skip the clean up so we can test adding a file
            helm_args: |
                --namespace nextcloud --skip-clean-up --helm-extra-set-args "--values charts/nextcloud/test-values/s3-as-primary-storage.yaml"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Add dependency chart repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add collabora-online https://collaboraonline.github.io/online

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind cluster
        uses: helm/kind-action@v1.11.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Install MinIO for testing S3 as Primary Storage
        if: matrix.test_cases.name == 'S3 Enabled as Primary Storage'
        # installs minio community helm chart here:
        # https://github.com/minio/minio/tree/master/helm/minio
        run: |
          helm repo add minio https://charts.min.io/ && \
          helm install minio \
             --namespace nextcloud \
             --create-namespace \
             --wait \
             --wait-for-jobs \
             --timeout 2m0s \
             --values .github/tests/minio_test_values.yaml \
             minio/minio

      - name: Run chart-testing (install ${{ matrix.test_cases.name }})
        id: install
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }} ${{ matrix.test_cases.helm_args }}

      - name: Try adding a file to Nextcloud
        if: matrix.test_cases.name == 'S3 Enabled as Primary Storage'
        # applies a kubernetes job that uploads a file and then checks log of finished pod
        run: |
            kubectl config set-context --current --namespace=nextcloud && \
            kubectl apply -f ./.github/tests/test_upload_job.yaml --wait=true && \
            sleep 2 && \
            kubectl wait --for=condition=Complete --timeout=2m job/create-nextcloud-file && \
            echo "Here's the logs from the job:" && \
            kubectl logs --tail=-1 -f -l batch.kubernetes.io/job-name=create-nextcloud-file && \
            echo "Here's the logs from the nextcloud pod:" && \
            kubectl logs -l app.kubernetes.io/name=nextcloud

  summary:
    runs-on: ubuntu-latest-low
    needs: [changes, test]
    if: always()
    steps:
      - name: Summary
        run: if ${{ needs.changes.outputs.src != 'false' && needs.test.result != 'success' }}; then exit 1; fi
